<?php

namespace app\modules\register\controllers;

use app\modules\register\models\Registration;
use app\modules\register\models\RegistrationTeamMember;
use Symfony\Component\Finder\Exception\AccessDeniedException;
use Yii;
use yii\base\Model;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\NotFoundHttpException;

/**
 * Class DefaultController
 * @package app\modules\register\controllers
 */
class DefaultController extends Controller
{
    public $layout = 'cbs';

    public function beforeAction($action)
    {
        $session = Yii::$app->session;
        $session->open();

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        return $this->render('index');
    }
    public function actionHome()
    {
        $model = $this->loadModel();
        if (!($model instanceof Registration)) {
            return $model;
        }
        return $this->render(
            'home',
            [
                'model' => $model
            ]
        );
    }
    public function actionPay()
    {
        $model = $this->loadModel();
        if (!($model instanceof Registration)) {
            return $model;
        }
        return $this->render(
            'pay',
            [
                'model' => $model
            ]
        );
    }
    public function actionEvents()
    {
        $model = $this->loadModel();
        if (!($model instanceof Registration)) {
            return $model;
        }
        return $this->render(
            'events',
            [
                'model' => $model
            ]
        );
    }
    public function actionUpdate($id, $hash = '')
    {

    }
    /**
     * @return string
     */
    public function actionStart()
    {
        $model =  new Registration(['scenario' => Registration::SCENARIO_START]);
        $primaryContact = $model->getPrimaryTeamMember();
        $primaryContact->scenario = RegistrationTeamMember::SCENARIO_SECONDARY;


        if (Yii::$app->request->isPost) {
            $model->load(Yii::$app->request->post());
            $primaryContact->load(Yii::$app->request->post());

            if ($model->validate() && $primaryContact->validate()) {
                $success = $model->save();

                $primaryContact->registration_id = $model->id;
                $primaryContact->save();

                for($i = 0; $i < $model->team_members; $i++) {
                    $contact = new RegistrationTeamMember();
                    $contact->registration_id = $model->id;
                    $contact->save(false);
                }

                $session = Yii::$app->session;
                $session->set('registration_id', $model->id);

                $this->redirect(['detail']);
            }
        }

        return $this->render(
            'start',
            [
                'model' => $model,
                'primaryContact' => $primaryContact,
            ]
        );
    }
    public function actionConfirm($id, $hash)
    {
        $model = Registration::findOne($id);
        if (!$model || $model->hash != $hash) {
            return $this->redirect(['index']);
        }
        $session = Yii::$app->session;
        $session->set('registration_id', $model->id);
        return $this->redirect(['continue']);

    }
    public function actionContinue()
    {
        $model = $this->loadModel(false);
        if ($model) {
            return $this->redirect($model->status_id == Registration::STATUS_NEW ? ['detail'] : ['home']);
        }
        $sent = false;
        if (Yii::$app->request->isPost) {
            $email = Yii::$app->request->post('email');
            if ($email) {
                $sent = true;
                $teamMembers = RegistrationTeamMember::find()->where([
                    'primary_contact' => '1',
                    'email' => $email
                ])->all();
                if (count($teamMembers)) {
                    $mail = Yii::$app->mailer->compose(
                        [
                            'html' => 'register/send_link_html',
                            'text' => 'register/send_link_text',
                        ],
                        [
                            'teamMembers' => $teamMembers,
                        ]
                    )
                        ->setFrom(Yii::$app->params['fromEmail'])
                        ->setTo($teamMembers[0]->email)
                        ->setSubject('CBS 2016 - Continue Registration');
                    $mail->send();
                }
            }
        }

        return $this->render('continue', ['sent' => $sent]);
    }
    public function actionDetail()
    {
        $model = $this->loadModel();
        if (!($model instanceof Registration)) {
            return $model;
        }
        $model->addScenario();
        //$primaryContact = $model->getPrimaryTeamMember();

        if (Yii::$app->request->isPost) {
            $model->load(Yii::$app->request->post());
            $validate = true;
            if (Yii::$app->request->post('addMember', '') == 'addMember') {
                $contact = new RegistrationTeamMember();
                $contact->registration_id = $model->id;
                $contact->save(false);
                $validate = false;
            }
            $removeMember = Yii::$app->request->post('removeMember', '');
            if ($removeMember != '') {
                /* @var RegistrationTeamMember $member */
                $member = RegistrationTeamMember::findOne($removeMember);
                if ($member) {
                    if ($member->registration_id == $model->id && !$member->primary_contact) {
                        $member->delete();
                        $validate = false;
                    }
                }
            }

            /* @var RegistrationTeamMember[] $teamMembers */
            $teamMembers = ArrayHelper::map(
                $model->registrationTeamMembers,
                'id',
                function ($o) {
                    return $o;
                });
            Model::loadMultiple($teamMembers, Yii::$app->request->post());

            foreach($teamMembers as $teamMember) {
                if ($teamMember->registration_id != $model->id) {
                    throw new AccessDeniedException;
                }
                $teamMember->addScenario();
            }

            if ($validate) {
                $model->save(false);
                foreach ($teamMembers as $teamMember) {
                    $teamMember->save(false);
                }

                $success = $model->validate();
                $success = Model::validateMultiple($teamMembers) && $success;

                if ($success) {
                    if ($model->status_id == Registration::STATUS_NEW) {
                        $model->status_id = Registration::STATUS_SUBMITTED;
                    }
                    $success = $model->save();

                    return $this->redirect(['home']);
                }
            }
        }

        return $this->render(
            'detail',
            [
                'model' => $model,
            ]
        );
    }

    /**
     * @param bool $redirect
     * @return Registration
     */
    private function loadModel($redirect = true)
    {
        $session = Yii::$app->session;
        $registration_id = $session->get('registration_id');

        /* @var Registration $model */
        $model = Registration::findOne($registration_id);
        if (!$model && $redirect) {
            return $this->redirect(['index']);
        }

        return $model;
    }

}
